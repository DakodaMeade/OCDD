@model OCDD.Models.AppointmentModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    // Appointment View
    // Displays appoitnemnt information
    // Allows admins to complete and cancel appoitnemts and users to cancel them if they are in scheduled status
    ViewData["Title"] = "Appointment Details";
    var source = ViewData["Source"] as string;
}

<h1>Appointment Details</h1>

<div class="container mt-5">
    <div class="card mx-auto" style="max-width: 600px;">
        <div class="card-header bg-primary text-white text-center">
            <h4>Appointment Confirmation</h4>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.appointmentID)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.appointmentID)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.dateTime)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.dateTime)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.vehicleYear)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.vehicleYear)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.vehicleMake)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.vehicleMake)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.vehicleModel)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.vehicleModel)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.status)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.status)
                </dd>
            </dl>
            <hr />
            <h5>Service Information</h5>
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.service.name)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.service.name)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.service.description)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.service.description)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.service.price)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.service.price)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.service.duration)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.service.duration)
                </dd>
            </dl>
            <hr />
            <h5>Personal Information</h5>
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.name)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.name)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.email)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.email)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.phoneNumber)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.phoneNumber)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.address)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.address)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.zipCode)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.zipCode)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.city)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.city)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.state)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.state)
                </dd>
            </dl>
            @if (Model.status == "Scheduled"){
                // If appoitnemnt is in schedule status show more buttons otherwise show a back button
            <div class="row">
                    
                    @if (source == "AdminDashboard")
                    {
                        // if admin show complete appoitnemnt button otherwise show the cancel appointment button
                        <div class="col text-left">
                            <form id="completeForm" action="@Url.Action("CompleteAppointment", "Appointment", new { appointmentID = Model.appointmentID })" method="post">
                                <button type="submit" class="btn btn-success" onclick="return confirmComplete()">Complete</button>
                            </form>
                        </div>
                    }
                <div class="col text-right">
                        <form id="cancelForm" action="@Url.Action("CancelAppointment", "Appointment", new { appointmentID = Model.appointmentID, source = ViewData["Source"] })" method="post">
                            <button type="submit" class="btn btn-danger" onclick="return confirmCancel()">Cancel Appointment</button>
                        </form>
                </div>
                </div>
            }else
            {
                <div class="col text-right">
                    <a href="@Url.Action("Index", "MyAppointments")" class="btn btn-danger">Back</a>
                </div>
            }
            
        </div>
    </div>
</div>
<script>
    // confirm complete
    function confirmComplete() {
        return confirm('Are you sure you want to mark this appointment as complete?');
    }
    // confirm cancel
    function confirmCancel() {
        return confirm('Are you sure you want to cancel this appointment?');
    }
</script>